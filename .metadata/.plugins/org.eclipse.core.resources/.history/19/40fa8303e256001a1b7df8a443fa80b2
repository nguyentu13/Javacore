package truong.nguyen.spring_boot_api.service;

import org.apache.log4j.Logger;
import truong.nguyen.spring_boot_api.connection.ConnectionManager;
import truong.nguyen.spring_boot_api.connection.database.ConnectionPool;
import truong.nguyen.spring_boot_api.log.LogFactory;

import java.sql.*;

public class BaseService {
    protected Logger logger = LogFactory.getInstance().getLogger(this.getClass());
    protected ConnectionPool connectionManager = ConnectionPool.getInstance();
    private int idx = 1;
    protected String sql;
    protected Connection conn;
    protected PreparedStatement ps;

    protected void setSql(String sql){
        this.sql = sql;
    };

    protected void setString(String value) throws Exception{
        ps.setString(idx,value);
        idx++;
    }

    protected void setInt(int value) throws Exception{
        ps.setInt(idx,value);
        idx++;
    }

    protected void setNull(int value) throws SQLException {
        if(value == 0){
            ps.setNull(idx, Types.INTEGER);
            idx++;
        }
        else{
            ps.setInt(idx,value);
            idx++;
        }
    }

    protected ResultSet executeQuery() throws Exception{
        ResultSet rs = null;
        try{
            preparedSql();
            rs = ps.executeQuery();
        }
        catch (Exception ex){
            logger.debug(ex);
        }
       finally {
            idx=1;
        }

        return rs;
    }

    protected void execute() throws Exception{
        try{
            preparedSql();
            ps.executeUpdate();
        }
        catch (Exception ex){
            logger.debug(ex);
        }
        finally {
            idx =1;
        }
    }

    protected void preparedSql() throws Exception{
        conn = connectionManager.getConnectionT().getConnection();
        ps = conn.prepareStatement(sql);
    }

    protected void releaseConnection() throws Exception{
    	connectionManager.release(connectionT);
    }
}
