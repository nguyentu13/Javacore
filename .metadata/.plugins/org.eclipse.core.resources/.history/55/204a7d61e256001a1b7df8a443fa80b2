package truong.nguyen.spring_boot_api.service;

import org.springframework.stereotype.Service;
import truong.nguyen.spring_boot_api.connection.ConnectionManager;
import truong.nguyen.spring_boot_api.listener.response.BasePagingDataResponse;
import truong.nguyen.spring_boot_api.model.PageInfo;
import truong.nguyen.spring_boot_api.model.User;
import truong.nguyen.spring_boot_api.repository.UserGetListByRoleRepository;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

@Service
public class UserGetListByRoleService extends BaseService implements UserGetListByRoleRepository {
    @Override
    public BasePagingDataResponse getListByRole(int role_id, PageInfo pageInfo) throws Exception {
        BasePagingDataResponse response = new BasePagingDataResponse();

        List<User> users = new ArrayList<>();

        sql = "select * from user where role_id = ? order by "+pageInfo.getOrder_by()+
                " "+(pageInfo.isOrder_type()?"ASC":"DESC")+" limit ?,?";
        preparedSql();
        setInt(role_id);
        setInt(pageInfo.getPage_index()*pageInfo.getPage_size());
        setInt(pageInfo.getPage_size());
        ResultSet rs = ps.executeQuery();
        if(rs!=null){
            try{
                while (rs.next()){
                    User user = new User();
                    user.setId(rs.getInt("id"));
                    user.setFull_name(rs.getString("full_name"));
                    user.setName(rs.getString("user_name"));
                    user.setPassword(rs.getString("password"));
                    user.setBirth_day(rs.getString("birth_day"));
                    user.setGender(rs.getInt("gender"));
                    user.setEmail(rs.getString("email"));
                    user.setPhone(rs.getString("phone"));
                    user.setAddress(rs.getString("address"));
                    user.setRole_id(rs.getInt("role_id"));
                    users.add(user);
                }
            }
           finally {
                rs.close();
            }
        }

        String sql2 = "select count(id) as count from user where role_id = ?";
        ps = conn.prepareStatement(sql2);
        ps.setInt(1,role_id);
        ResultSet rs2 = ps.executeQuery();
        if(rs2!=null){
            if (rs2.next()) pageInfo.setTotal_record(rs2.getInt("count"));
        }

        int total_page = (int) Math.ceil((double)pageInfo.getTotal_record() / pageInfo.getPage_size());
        pageInfo.setTotal_page(total_page);

        releaseConnection();

        response.setTotal_pages(total_page);
        response.setTotal_rows(pageInfo.getTotal_record());
        response.setPage_index(pageInfo.getPage_index());
        response.setPage_size(pageInfo.getPage_size());
        response.setData(users);
        return response;
    }
}
