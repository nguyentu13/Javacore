package com.example.demo.Controller;

import java.util.List;

import com.example.demo.DTO.ApiResponse;
import com.example.demo.DTO.Cart;
import com.example.demo.DTO.User;
import com.example.demo.Repo.UserRepo;
import com.example.demo.Service.UserService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.jpa.repository.config.EnableJpaRepositories;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.web.bind.annotation.*;

import javax.servlet.http.HttpServletResponse;

@RestController
@RequestMapping("/user")
public class UserController {

    @Autowired
    private UserService userService;

    @Autowired
    private PasswordEncoder passwordEncoder;

    @GetMapping("getAll")
    public ApiResponse getAll() {
        try {
            return ApiResponse.build(HttpServletResponse.SC_OK, true, "", userService.getAll());
        } catch (Exception e) {
            return ApiResponse.build(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, false, e.getMessage(), null);
        }
    }


    @GetMapping("getByStatus/{status}")
    public ApiResponse getAllByStatus(@PathVariable("status") String status) {
        try {
            return ApiResponse.build(HttpServletResponse.SC_OK, true, "", userService.getAllByStatus(status));
        } catch (Exception e) {
            return ApiResponse.build(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, false, e.getMessage(), null);
        }
    }


    @GetMapping("getByUserName/{username}")
    public ApiResponse getByUserName(@PathVariable("username") String username) {
        try {
            return ApiResponse.build(HttpServletResponse.SC_OK, true, "", userService.getByUserName(username));
        } catch (Exception e) {
            return ApiResponse.build(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, false, e.getMessage(), null);
        }
    }


    @PostMapping("save")
    public ApiResponse save(@RequestBody User user) {
        try {
            user.setPassword(passwordEncoder.encode(user.getPassword()));
            userService.save(user);
            return ApiResponse.build(HttpServletResponse.SC_OK, true, "", null);
        } catch (Exception e) {
            return ApiResponse.build(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, false, e.getMessage(), null);
        }
    }


    @PostMapping("getbycondition")
    public ApiResponse getByCondition(@RequestBody User user) {
        try {
            return ApiResponse.build(HttpServletResponse.SC_OK, true, "", userService.getByCondition(user));
        } catch (Exception e) {
            return ApiResponse.build(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, false, e.getMessage(), null);
        }
    }
}
